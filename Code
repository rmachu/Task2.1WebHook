/*
  WriteMultipleFields
  
  Description: Writes values to fields 1,2,3,4 and status in a single ThingSpeak update every 20 seconds.
  
  Hardware: Arduino MKR1000
  
  !!! IMPORTANT - Modify the secrets.h file for this project with your network connection and ThingSpeak channel details. !!!
  
  Note:
  - Requires WiFi101 library version 0.15.3 or newer.
  - This example is written for a network using WPA encryption. For WEP or WPA, change the WiFi.begin() call accordingly.
  
  ThingSpeak ( https://www.thingspeak.com ) is an analytic IoT platform service that allows you to aggregate, visualize, and 
  analyze live data streams in the cloud. Visit https://www.thingspeak.com to sign up for a free account and create a channel.  
  
  Documentation for the ThingSpeak Communication Library for Arduino is in the README.md folder where the library was installed.
  See https://www.mathworks.com/help/thingspeak/index.html for the full ThingSpeak documentation.
  
  For licensing information, see the accompanying license file.
  
  Copyright 2020, The MathWorks, Inc.
*/
//Include relevant libraries and files 
#include <SPI.h>
#include <WiFiNINA.h>
#include "secrets.h"
#include "ThingSpeak.h"
#include "DHT.h"
//Define DHT pin and DHT type
#define DHTPIN 12
#define DHTTYPE DHT11 

char ssid[] = SECRET_SSID;   // your network SSID (name) 
char pass[] = SECRET_PASS;   // your network password
WiFiClient  client;

unsigned long myChannelNumber = SECRET_CH_ID;
const char * myWriteAPIKey = SECRET_WRITE_APIKEY;

// Initialize our values
String myStatus = "";
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(9600);      // Initialize serial 
  ThingSpeak.begin(client);  // Initialize ThingSpeak 
   dht.begin(); //Initialise dht connection for sensor
}

void loop() {

  // Connect or reconnect to WiFi
  if (WiFi.status() == WL_NO_MODULE) {

    Serial.println("Communication with WiFi module failed!");

    // don't continue

    while (true);

  }
  //Show message of connection status
  if(WiFi.status() != WL_CONNECTED){
    Serial.print("Attempting to connect to SSID: "); //When connecting
    Serial.println(SECRET_SSID);
    while(WiFi.status() != WL_CONNECTED){
      WiFi.begin(ssid, pass);  
      Serial.print(".");
      delay(5000);     
    } 
    Serial.println("\nConnected."); //Connected
  }
  //Declare and initialise variables: Humidity, temp, heatindex
  float Humidity = dht.readHumidity(); 
  float Temperature = dht.readTemperature();
  float HeatIndex = dht.computeHeatIndex(Temperature, Humidity, false);

  // set the fields with the values
  ThingSpeak.setField(1, Temperature);
  ThingSpeak.setField(2, Humidity );
  ThingSpeak.setField(3, HeatIndex);
 
  // set the status
  ThingSpeak.setStatus(myStatus);
  
  // write to the ThingSpeak channel 
  int x = ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);
  if(x == 200){
    Serial.println("Channel update successful.");
  }
  else{
    Serial.println("Problem updating channel. HTTP error code " + String(x));
  }

  delay(60000); // Wait 60 seconds to update the channel again
}
